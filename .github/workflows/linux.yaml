name: Linux

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Get the latest version
        run: |
          VERSION=$(curl -s https://api.github.com/repos/ninja-build/ninja/releases/latest | grep -Po '"tag_name": "\Kv[0-9.]+')
          CURRENT_VERSION=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | grep -Po '"tag_name": "\Kv[0-9.]+' || true)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV
      - name: Clone the repository
        if: env.VERSION != env.CURRENT_VERSION
        uses: actions/checkout@v5
      - name: Build the Docker image
        if: env.VERSION != env.CURRENT_VERSION
        run: docker build -t ninja scripts
      - name: Build the application
        if: env.VERSION != env.CURRENT_VERSION
        run: |
          docker run --rm -v ./:/app ninja scripts/compile.sh
          sudo chown -R $USER:$USER build
          mv ./build/x86_64-linux-gnu/ninja ./build/ninja-x86_64-linux-gnu
          mv ./build/aarch64-linux-gnu/ninja ./build/ninja-aarch64-linux-gnu
      - name: Publish the release
        if: env.VERSION != env.CURRENT_VERSION
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          body: "[Release notes](https://github.com/ninja-build/ninja/releases/tag/${{ env.VERSION }})"
          files: |
            ./build/ninja-x86_64-linux-gnu
            ./build/ninja-aarch64-linux-gnu
